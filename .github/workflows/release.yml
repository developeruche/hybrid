name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-release:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            platform: linux
            arch: amd64
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            platform: linux
            arch: arm64
          - target: x86_64-apple-darwin
            os: macos-latest
            platform: darwin
            arch: amd64
          - target: aarch64-apple-darwin
            os: macos-latest
            platform: darwin
            arch: arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Create archive
        run: |
          cd target/${{ matrix.target }}/release
          # Replace 'cargo-my-cli' with your actual binary name
          tar czf cargo_my-cli_${{ matrix.platform }}_${{ matrix.arch }}.tar.gz cargo-my-cli
          mv cargo_my-cli_${{ matrix.platform }}_${{ matrix.arch }}.tar.gz ../../../

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./cargo_my-cli_${{ matrix.platform }}_${{ matrix.arch }}.tar.gz
          asset_name: cargo_my-cli_${{ matrix.platform }}_${{ matrix.arch }}.tar.gz
          asset_content_type: application/gzip